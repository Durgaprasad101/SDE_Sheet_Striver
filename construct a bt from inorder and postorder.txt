import java.util.*;
/************************************************************
  
   Following is the TreeNode class structure
   
   class TreeNode<T> { 
        T data; 
        TreeNode<T> left;
        TreeNode<T> right;
  
        TreeNode(T data) { 
            this.data = data; 
            left = null; 
            right = null; 
        }
   }
    
 ************************************************************/

public class Solution {
	public static TreeNode<Integer> getTreeFromPostorderAndInorder(int[] postOrder, int[] inOrder) {
		Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<inOrder.length;i++){
            map.put(inOrder[i],i);
        }
        TreeNode<Integer> root=bt(inOrder,0,inOrder.length-1,postOrder,0,postOrder.length-1,map);
        return root;
	}
    public static TreeNode<Integer> bt(int[] inOrder,int instart,int inend,int[] postOrder,int postart,int poend,Map<Integer,Integer> map){
        if(postart>poend || instart>inend)
            return null;
        TreeNode<Integer> root=new TreeNode<Integer>(postOrder[poend]);
        int inroot=map.get(postOrder[poend]);
        int end=inroot-instart;
        root.left=bt(inOrder,instart,inroot-1,postOrder,postart,postart+end-1,map);
        root.right=bt(inOrder,inroot+1,inend,postOrder,postart+end,poend-1,map);
        return root;
    }
}
