import java.util.*;
/************************************************************

    Following is the TreeNode class structure

    class TreeNode<T>
    {
       public:
        T data;
        TreeNode<T> left;
        TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    };

************************************************************/

import java.util.ArrayList;

public class Solution 
{
    public static TreeNode<Integer> buildBinaryTree(ArrayList<Integer>  inorder, ArrayList<Integer>  preorder) 
    {
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<inorder.size();i++){
            map.put(inorder.get(i),i);
        }
        TreeNode root=bt(preorder,0,preorder.size()-1,inorder,0,inorder.size()-1,map);
        return root;
    }
    public static TreeNode<Integer> bt(ArrayList<Integer> preorder,int prestart,int preend,ArrayList<Integer> inorder,int instart,int inend,Map<Integer,Integer> map){
        if(prestart>preend || instart>inend)
            return null;
        TreeNode<Integer> root=new TreeNode<Integer>(preorder.get(prestart));
        int inroot=map.get(root.data);
        int end=inroot-instart;
        root.left=bt(preorder,prestart+1,prestart+end,inorder,instart,inroot-1,map);
        root.right=bt(preorder,prestart+end+1,preend,inorder,inroot+1,inend,map);
        return root;
    }
}
