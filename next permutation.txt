import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> permutation) 
	{
	      if(permutation.isEmpty() || permutation.size()==1) return permutation;
         int i=permutation.size()-2;
        while(i>=0 && permutation.get(i)>=permutation.get(i+1)) i--;
        if(i>=0){
            int j=permutation.size()-1;
            while(permutation.get(j)<=permutation.get(i)) j--;
            swap(i,permutation,j);
        }
        reverse(permutation,i+1,permutation.size()-1);
        return permutation;
	}
    public static void swap(int i,ArrayList<Integer> p,int j){
        Collections.swap(p, i, j);
    }
    public static void reverse(ArrayList<Integer> p,int i,int j){
        while(i<j) swap(i++,p,j--);
    }
}
